# -*- coding: utf-8 -*-
"""ML_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11qUhSoACeIAuRa4ThgEmpod3bsDwwy-m

## ML Major Project
"""



import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')



data=pd.read_csv('/content/drive/My Drive/database.csv')
data1=data

data.info()

data.head()

data.tail()

data.shape

data.columns

data.describe()

# checking for null values:
data.isnull().sum()



# Taking those features which are highly responsible for earthquake:
data = data[['Latitude', 'Longitude', 'Depth', 'Magnitude','Depth Seismic Stations']]
data.head(10)

data.describe()

data.mean()

df = data.fillna(data.mean())

df.isnull().sum()

# we can visualize the correlation using pairplot() plots for every combinations of pair-wise feature

col = ["Latitude", "Longitude", "Depth", "Magnitude","Depth Seismic Stations"]

sns.pairplot(df[col], plot_kws={"s": 3})
plt.show()

cor_matrix = df.corr()

cor_matrix

# Visualizing correlation matrix using heat map.
plt.figure(figsize = (10,10))
sns.heatmap(cor_matrix, annot = True)

X = df[['Depth Seismic Stations', 'Latitude', 'Longitude']]
y = df[['Magnitude', 'Depth']]
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print(X_train.shape, X_test.shape, y_train.shape, X_test.shape)

!pip3 install basemap

from mpl_toolkits.basemap import Basemap

m = Basemap(projection='mill',llcrnrlat=-80,urcrnrlat=80, llcrnrlon=-180,urcrnrlon=180,lat_ts=20,resolution='c')

longitudes = data["Longitude"].tolist()
latitudes = data["Latitude"].tolist()
#m = Basemap(width=12000000,height=9000000,projection='lcc',
            #resolution=None,lat_1=80.,lat_2=55,lat_0=80,lon_0=-107.)
x,y = m(longitudes,latitudes)

fig = plt.figure(figsize=(12,10))
plt.title("All affected areas")
m.plot(x, y, "o", markersize = 2, color = 'blue')
m.drawcoastlines()
m.fillcontinents(color='coral',lake_color='aqua')
m.drawmapboundary()
m.drawcountries()
plt.show()

